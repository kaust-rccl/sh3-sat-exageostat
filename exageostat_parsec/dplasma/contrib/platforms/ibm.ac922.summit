# vim: set filetype=sh :
#
cat <<_EOF
#################################################
# Platform $with_platform
# This file is for a compilation on OLCF Summit.
#   configure --with-platform=ibm.ac922.summit ...
# Set preferences and dependencies for the
# $with_platform system executables and libs
#   CC=mpicc CXX=mpiCC FC=mpif90
#
_EOF

[ -n "$OLCF_CMAKE_ROOT" ] || module load cmake
echo -e "Using CMake\tfrom\t$OLCF_CMAKE_ROOT"

# The following unload has to be done externally as it modifies the internal 
# behavior of mpicc, which cannot be cached by CMake
#  module unload xalt
[ -n "$XALT_OLCF" ] && (echo "XALT module detected; this may cause 'ld' to misbehave: perform 'module unload xalt' before invoking configure."; exit 1)
[ -n "$OLCF_CUDA_ROOT" ] || module load cuda
echo -e "Using CUDA\tfrom\t$OLCF_CUDA_ROOT"

[ -n "$LMOD_MPI_NAME" ] || module load spectrum-mpi
echo -e "Using MPI\tfrom\t$LMOD_MPI_NAME"

[ -n "$OLCF_ESSL_ROOT" ] || module load essl
echo -e "Using BLAS\tfrom\t$OLCF_ESSL_ROOT"
CMAKE_DEFINES+=" -DBLAS_LIBRARIES='${OLCF_ESSL_ROOT}/lib64/libessl.so'"

if [ -z "$LAPACKE_ROOT" ]; then
  F=$(find $PWD $srcdir $prefix -name liblapacke.a -print -quit)
  if [ -z "$F" ]; then
    echo "System installed LAPACKE does not work with ESSL. Please compile your own"
    exit 1
  fi
  #echo "  Found liblapacke.a in $F"
  LAPACKE_ROOT=$(dirname $(dirname $F)..)
fi
echo -e "Using LAPACKE\tfrom\t$LAPACKE_ROOT"
ENVVARS+=" LAPACKE_ROOT=$LAPACKE_ROOT"

ENVVARS+=" CC=mpicc CXX=mpicxx FC=mpif90 CFLAGS='$CFLAGS' LDFLAGS='$LDFLAGS'"

#enable_static=no
with_blas=IBMESSL
with_cuda=$OLCF_CUDA_ROOT
with_mpi=yes
with_hwloc=yes # system default works fine

# Let's have configure do the rest as usual now

