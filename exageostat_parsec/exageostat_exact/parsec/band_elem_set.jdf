extern "C" %{
/*
 * Copyright (c) 2017-2018 The Universiy of Tennessee and The Universiy
 *                         of Tennessee Research Foundation. All rights
 *                         reserved.
 */

#include "mix_precision_internal.h"

%}

descA                [ type = "parsec_tiled_matrix_dc_t *" ]
band_size_double     [ type = "int" ]

Task(m, n)

m = 0 .. descA->lmt-1
n = 0 .. m 

: descA(m, n)

READ A <- descA(m, n) 


BODY
{
    if( m-n < band_size_double ) {
        (data_of_descA(m, n))->nb_elts = descA->mb * descA->nb * sizeof(double);
    } else {
        (data_of_descA(m, n))->nb_elts = descA->mb * descA->nb * sizeof(float);
    }
}
END


extern "C" %{

/**
 * @param [in] dcA:    the data, already distributed and allocated
 * @return the parsec object to schedule.
 */
parsec_taskpool_t*
parsec_band_elem_set_New(parsec_tiled_matrix_dc_t *dcA, int band_size_double) 
{
    parsec_taskpool_t* band_elem_set_taskpool;
    parsec_band_elem_set_taskpool_t* taskpool = NULL;

    taskpool = parsec_band_elem_set_new(dcA, band_size_double); 
    band_elem_set_taskpool = (parsec_taskpool_t*)taskpool;

    parsec_matrix_add2arena(taskpool->arenas[PARSEC_band_elem_set_DEFAULT_ARENA],
                            parsec_datatype_float_t, matrix_UpperLower,
                            1, dcA->mb, dcA->nb, dcA->mb,
                            PARSEC_ARENA_ALIGNMENT_SSE, -1 );

    return band_elem_set_taskpool;
}

/**
 * @param [inout] the parsec object to destroy
*/
void parsec_band_elem_set_Destruct(parsec_taskpool_t *taskpool)
{
    parsec_band_elem_set_taskpool_t *band_elem_set_taskpool = (parsec_band_elem_set_taskpool_t *)taskpool;
    parsec_matrix_del2arena(band_elem_set_taskpool->arenas[PARSEC_band_elem_set_DEFAULT_ARENA]);
    parsec_taskpool_free(taskpool);
}

/**
 * @brief allocate and generate dcA
 * 
 * @param [inout] dcA: the data, already distributed and allocated
 */
void parsec_band_elem_set(parsec_context_t *parsec,
                       parsec_tiled_matrix_dc_t *dcA, int band_size_double)
{
	parsec_taskpool_t *parsec_band_elem_set = NULL;

	parsec_band_elem_set = parsec_band_elem_set_New(dcA, band_size_double); 

	if( parsec_band_elem_set != NULL ){
		parsec_context_add_taskpool(parsec, parsec_band_elem_set);
		parsec_context_start(parsec);
		parsec_context_wait(parsec);
		parsec_band_elem_set_Destruct(parsec_band_elem_set);
	}
}

%}
