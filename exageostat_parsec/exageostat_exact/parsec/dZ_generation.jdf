extern "C" %{
/*
 * Copyright (c) 2017-2018 The Universiy of Tennessee and The Universiy
 *                         of Tennessee Research Foundation. All rights
 *                         reserved.
 */

#include "mix_precision_internal.h"

static void parsec_core_dzcpy(double *Z, int m, int m0, double *r, int lda) {
    
        memcpy(Z, &r[m0], m * sizeof(double));
} 

%}

descA                [ type = "parsec_tiled_matrix_dc_t *" ]
r                    [ type = "double *" ]

Allocate(m, n)

m = 0 .. descA->lmt-1
n = 0 .. 0

: descA(m, n)

RW A <- descA(m, n)      [ type = DB ]
     -> descA(m, n)      [ type = DB ]

BODY
{
    int tempmm = (m == descA->lmt-1) ? parsec_imin(descA->mb, descA->m-m*descA->mb): descA->mb;
    int m0 = m * descA->mb;

    parsec_core_dzcpy(A, tempmm, m0, r, descA->mb );
}
END

extern "C" %{

/**
 * @param [in] dcA:    the data, already distributed and allocated
 * @return the parsec object to schedule.
 */
parsec_taskpool_t*
parsec_dZ_generation_New( parsec_tiled_matrix_dc_t *dcA, double *r ) 
{
    parsec_taskpool_t* dZ_generation_taskpool;
    parsec_dZ_generation_taskpool_t* taskpool = NULL;

    taskpool = parsec_dZ_generation_new(dcA, r); 
    dZ_generation_taskpool = (parsec_taskpool_t*)taskpool;

    parsec_matrix_add2arena(taskpool->arenas[PARSEC_dZ_generation_DB_ARENA],
                            parsec_datatype_double_t, matrix_UpperLower,
                            1, dcA->mb, dcA->nb, dcA->mb,
                            PARSEC_ARENA_ALIGNMENT_SSE, -1 );

    return dZ_generation_taskpool;
}

/**
 * @param [inout] the parsec object to destroy
*/
void parsec_dZ_generation_Destruct(parsec_taskpool_t *taskpool)
{
    parsec_dZ_generation_taskpool_t *dZ_generation_taskpool = (parsec_dZ_generation_taskpool_t *)taskpool;
    parsec_matrix_del2arena(dZ_generation_taskpool->arenas[PARSEC_dZ_generation_DB_ARENA]);
    parsec_taskpool_free(taskpool);
}

/**
 * @brief allocate and generate dcA
 * 
 * @param [inout] dcA: the data, already distributed and allocated
 */
int parsec_dZ_generation(parsec_context_t *parsec,
                         parsec_tiled_matrix_dc_t *dcA, double *r) 
{
    parsec_taskpool_t *parsec_dZ_generation = NULL;

    parsec_dZ_generation = parsec_dZ_generation_New( dcA, r ); 

    if( parsec_dZ_generation != NULL ){
        parsec_context_add_taskpool(parsec, parsec_dZ_generation);
        parsec_context_start(parsec);
        parsec_context_wait(parsec);
        parsec_dZ_generation_Destruct(parsec_dZ_generation);
    }

    return 0;
}

%}
